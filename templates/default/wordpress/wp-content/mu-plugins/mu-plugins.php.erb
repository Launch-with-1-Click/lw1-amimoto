<?php
/*
Plugin Name: must use functions.
Plugin URI:
Description:
Version: 0.1
Author: DigitalCube
Author URI:
License: GPLv2 or later
*/

// https://core.trac.wordpress.org/ticket/25239
function my_wp_mail_from( $original_email_address ) {
  return 'wordpress@' . parse_url( get_home_url( get_current_blog_id() ), PHP_URL_HOST );
}
add_filter( 'wp_mail_from', 'my_wp_mail_from' );

// http://dogmap.jp/2012/08/25/must-use-plugins/
add_action('init', function(){new just_do_it();});
class just_do_it {
  private $must_plugins = array();

  function __construct() {
    if (!is_user_logged_in())
      return;
    if (defined('WPLANG') && WPLANG == 'ja')
      $this->must_plugins['WP Multibyte Patch'] = 'wp-multibyte-patch/wp-multibyte-patch.php';
    if (defined('IS_AMIMOTO') && IS_AMIMOTO) {
      $this->must_plugins['Nginx Cache Controller'] = 'nginx-champuru/nginx-champuru.php';
      $this->must_plugins['AMIMOTO Dashboard'] = 'amimoto-dashboard/amimoto-plugin-dashboard.php';
    }

    $this->must_plugins = apply_filters( 'amimoto_just_do_it', $this->must_plugins );
    $this->init_managed_options();
    add_action('shutdown', array($this, 'plugins_loaded'));
  }

  public function init_managed_options() {
    if ( isset( $_SERVER['HTTP_X_AMIMOTO_MANAGED'] ) && $_SERVER['HTTP_X_AMIMOTO_MANAGED'] ){
      $expires = array(
        "is_home" => 43200,
        "is_archive" => 43200,
        "is_singular" => 43200,
        "is_feed" => 43200,
        "other" => 43200,
      );
      if ( defined('AMIMOTO_CDN_ID') ) {
          $expires = array(
              "is_home" => 30,
              "is_archive" => 30,
              "is_singular" => 30,
              "is_feed" => 30,
              "other" => 30,
          );
      }
      update_option( 'nginxchampuru-cache_levels', '1:2');
      update_option( 'nginxchampuru-cache_dir', '/var/cache/nginx/proxy_cache');
      update_option( 'nginxchampuru-comment', 'single');
      update_option( 'nginxchampuru-publish', 'almost');
      update_option( 'nginxchampuru-enable_flush', 1);
      update_option( 'nginxchampuru-cache_expires', $expires);
    }
  }

  public function plugins_loaded() {
    $activated = false;
    $activePlugins = get_option('active_plugins');
    foreach ($this->must_plugins as $key => $plugin) {
      if ( !array_search($plugin, $activePlugins) && file_exists(WP_PLUGIN_DIR.'/'.$plugin) ) {
        activate_plugin( $plugin, '', $this->is_multisite() );
        $activated = true;
      }
    }
    do_action('amimoto_additional_init');
    if ($activated)
      @unlink(__FILE__);
  }

  private function is_multisite() {
    return function_exists('is_multisite') && is_multisite();
  }
}
